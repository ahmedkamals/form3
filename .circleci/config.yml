version: 2.1

alias:
  default: &default
    environment:
      PROJECT_NAME: "Form3"
      COVERAGE: "true"
      VALIDATION: "true"
    working_directory: /go/src/github.com/ahmedkamals/form3
    docker:
      - image: circleci/golang:1.17
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          GOPATH: "/go"
          GO111MODULE: "on"
          GITHUB_API: "https://api.github.com"
          REPO_NAME: "ahmedkamals"
          IMAGE_NAME: "form3"
  setup_remote_docker: &setup_remote_docker
    version: 20.10.7
    docker_layer_caching: false

executors:
  machine-executor:
    machine:
      image: ubuntu-1604:202104-01
jobs:
  linting:
    <<: *default
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-validation-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Revision }}
            - go-validation-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}
            - go-validation-cache-v1-{{ .Branch }}
            - go-validation-cache-v1
      - run:
          name: Vendor dependencies
          command: >
            make get-deps
      - run:
          name: Validation tests
          command: >
            if [ "$VALIDATION" == "true" ]; then make validate; else echo 'skipping validation.'; fi
      - save_cache:
          key: go-validation-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Revision }}
          paths:
            - "/go/pkg/mod"

  unit:
    <<: *default
    #    executor: machine-executor
    steps:
      - setup_remote_docker: *setup_remote_docker
      - checkout
      - restore_cache:
          keys:
            - go-testing-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Revision }}
            - go-testing-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}
            - go-testing-cache-v1-{{ .Branch }}
            - go-testing-cache-v1
      - run:
          name: Unit tests
          command: |
            cp .env.sample .env
            echo "${DOCKERHUB_PASSWORD}" | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
            docker-compose -f docker-compose.yaml -f docker-compose.circleci.yaml up --build --remove-orphans api-client
            docker cp api-client:/app/.go .
            bash <(curl -s https://codecov.io/bash) -f .go/tests/coverage/profile.out
      - store_artifacts:
          path: .go/tests/coverage/index.html
          destination: coverage/profile.html
      - save_cache:
          key: go-testing-cache-v1-{{ .Branch }}-{{ checksum "go.sum" }}-{{ .Revision }}
          paths:
            - ".go/tests/coverage"

  versioning:
    <<: *default
    steps:
      - checkout
      - run:
          name: Versioning
          command: |
            bash ./.circleci/versionize.sh
            make version
      - persist_to_workspace:
          root: .
          paths:
            - .

  push:
    <<: *default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Push tag and check PR body
          command: >
            bash ./.circleci/push.sh
      - persist_to_workspace:
          root: .
          paths:
            - .

  gh_release:
    <<: *default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Release
          command: >
            bash ./.circleci/release.sh

workflows:
  version: 2
  build:
    jobs:
      - linting
      - unit:
          context:
            - "Dockerhub"
      - versioning:
          requires:
            - linting
            - unit
          filters:
            branches:
              only:
                - main
                - master
      - push:
          context:
            - "Github"
          requires:
            - versioning
      - gh_release:
          context:
            - "Github"
          requires:
            - push
